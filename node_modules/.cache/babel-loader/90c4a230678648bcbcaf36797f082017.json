{"ast":null,"code":"var _jsxFileName = \"/home/pasto/omar/frontReact/react-movies/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [moviesData, setMoviesData] = useState([]);\n  const [search, setSearch] = useState(\"code\");\n  const [sortGoodToBad, setSortGoodToBad] = useState(\"goodToBad\");\n  useEffect(() => {\n    axios.get(`https://api.themoviedb.org/3/search/movie?api_key=b7985c1b179a40fcc498bac69414a35b&query=${search}&language=fr-FR`).then(res => setMoviesData(res.data.results), [search]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter the title\",\n          id: \"search-input\",\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-sort-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-sort\",\n          id: \"goodToBad\",\n          onC: true,\n          children: [\"Top\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDC22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-sort\",\n          id: \"badToGood\",\n          children: [\"Flop\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83E\\uDC22\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: moviesData.slice(0, 20).sort((a, b) => {\n        if (sortGoodToBad === \"goodToBad\") {\n          return b.vote_average - a.vote_average;\n        } else if (sortGoodToBad === \"badToGood\") {\n          return a.vote_average - b.vote_average;\n        }\n      }).map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"WxXMcZJQiQcfGqwybJRclgZ/38Y=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/pasto/omar/frontReact/react-movies/src/components/Form.js"],"names":["React","useEffect","useState","axios","Card","Form","moviesData","setMoviesData","search","setSearch","sortGoodToBad","setSortGoodToBad","get","then","res","data","results","e","target","value","slice","sort","a","b","vote_average","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,MAAD,CAApC;AACA,QAAM,CAACQ,aAAD,EAAiBC,gBAAjB,IAAqCT,QAAQ,CAAC,WAAD,CAAnD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACHS,GADF,CACO,4FAA2FJ,MAAO,iBADzG,EAEEK,IAFF,CAEQC,GAAD,IAASP,aAAa,CAACO,GAAG,CAACC,IAAJ,CAASC,OAAV,CAF7B,EAGD,CAACR,MAAD,CAHC;AAIF,GALS,CAAT;AAOF,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,iBAFhB;AAGI,UAAA,EAAE,EAAC,cAHP;AAII,UAAA,QAAQ,EAAGS,CAAD,IAAOR,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,EAAE,EAAC,WAA7B;AAAyC,UAAA,GAAG,MAA5C;AAAA,yCAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,EAAE,EAAC,WAA7B;AAAA,0CAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACKb,UAAU,CACNc,KADJ,CACU,CADV,EACY,EADZ,EAEIC,IAFJ,CAES,CAACC,CAAD,EAAGC,CAAH,KAAQ;AACV,YAAGb,aAAa,KAAK,WAArB,EAAiC;AAC7B,iBAAOa,CAAC,CAACC,YAAF,GAAiBF,CAAC,CAACE,YAA1B;AACH,SAFD,MAEO,IAAGd,aAAa,KAAK,WAArB,EAAiC;AACpC,iBAAOY,CAAC,CAACE,YAAF,GAAiBD,CAAC,CAACC,YAA1B;AACH;AACJ,OARJ,EASIC,GATJ,CASSC,KAAD,iBAAa,QAAC,IAAD;AAAqB,QAAA,KAAK,EAAEA;AAA5B,SAAWA,KAAK,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,cATrB;AADL;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA5CD;;GAAMtB,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport { useEffect , useState } from 'react'\r\nimport axios from 'axios'\r\nimport Card from './Card'\r\n\r\n\r\n\r\nconst Form = () => {\r\n\r\n    const [moviesData, setMoviesData] = useState([]);\r\n    const [search, setSearch] = useState(\"code\");\r\n    const [sortGoodToBad , setSortGoodToBad] = useState(\"goodToBad\");\r\n\r\n    useEffect(() => {\r\n      axios\r\n       .get(`https://api.themoviedb.org/3/search/movie?api_key=b7985c1b179a40fcc498bac69414a35b&query=${search}&language=fr-FR`)\r\n       .then((res) => setMoviesData(res.data.results) \r\n    ,[search])\r\n   })\r\n    \r\n  return (\r\n    <div className='form-component'>\r\n        <div className='form-container'>\r\n            <form>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Enter the title\"\r\n                    id=\"search-input\"\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n                <input type=\"submit\" value=\"Search\"/>\r\n            </form>\r\n            <div className='btn-sort-container'>\r\n                <div className='btn-sort' id='goodToBad' onC>Top<span>ðŸ ¢</span></div>\r\n                <div className='btn-sort' id='badToGood'>Flop<span>ðŸ ¢</span></div>\r\n            </div>\r\n        </div>\r\n        <div className='result'>\r\n            {moviesData\r\n                .slice(0,20)\r\n                .sort((a,b) =>{\r\n                    if(sortGoodToBad === \"goodToBad\"){\r\n                        return b.vote_average - a.vote_average\r\n                    } else if(sortGoodToBad === \"badToGood\"){\r\n                        return a.vote_average - b.vote_average\r\n                    }\r\n                })\r\n                .map((movie) => ( <Card key={movie.id} movie={movie} /> ) )}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}